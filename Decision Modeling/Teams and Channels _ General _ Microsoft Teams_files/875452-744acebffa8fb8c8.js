"use strict";(this.webpackChunk_msteams_react_web_client=this.webpackChunk_msteams_react_web_client||[]).push([[875452],{705382:(e,t,s)=>{var r;s.d(t,{MP:()=>r,C9:()=>i}),function(e){e.default="default",e.skypeConCore="conCore",e.mediaAgent="mediaAgent",e.CDL="CDL",e.copilot="copilot"}(r||(r={}));Object.entries(r).map((([e,t])=>({label:e,value:t})));const i=new Set(["AppInfo.ClientType","Window.Type","Panel.Context","Session.TelemetryWorkerType","AppInfo.ExpIds","UserInfo.ETag","UserInfo.HostETag","Window.Type","AppInfo.Version","AppInfo.ExperienceName"])},460085:(e,t,s)=>{s.d(t,{M:()=>C});var r=s(923890),i=s(156054),n=s(239857),a=s(368848);const o={maxStorageSizeInBytes:5e6,storageKeyPrefix:"Teams:telemetry-instrumentation-offline-storage",minPersistenceLevel:2,eventsLimitInMem:null,inMemoMaxTime:15e3,inStorageMaxTime:1008e4,maxRetry:1,maxBatchsize:63e3,maxSentBatchInterval:15e3};var h;!function(e){e[e.ONLINE=1]="ONLINE",e[e.OFFLINE=2]="OFFLINE"}(h||(h={}));const l=["admin","Admin","ADMIN","administrator","Administrator","ADMINISTRATOR","automation","Automation","AUTOMATION","client","Client","CLIENT","limited","Limited","LIMITED","office","Office","OFFICE","services","Services","SERVICES","user","User","USER"],g={browserVer:"DeviceInfo.BrowserVersion",browserName:"DeviceInfo.BrowserName"};class c{constructor(e){this.contextManager=e,this.oneDsLoggers={},this.secondPartyLoggers={},this.oneDsManager=new r.D,this.offlineChannel=new n.f,this.sharedConfig={},this.privacyGuardContext={},this.isOnline=!0,this.offlineMinPersistenceLevel=o.minPersistenceLevel,this.statusParams={active:!0,firstPartyLoggerTokens:{},secondPartyLoggerTokens:{}}}initialize(e){this.initParams=e,this.sharedConfig={instrumentationKey:e.appTokens.default,endpointUrl:e.oneDsCollectorUrl,extensions:[],extensionConfig:[],propertyConfiguration:{populateBrowserInfo:!0,populateOperatingSystemInfo:!0,sessionAsGuid:!0,enableDistributedTracing:this.initParams?.enableDistributedTracing},channelConfiguration:{payloadPreprocessor:e.enableCompression?(e,t)=>{this.gzipPayload(e,t)}:void 0,eventsLimitInMem:e.eventsLimitInMem,autoFlushEventsLimit:e.eventsLimitInMem*e.autoFlushPercent,ignoreMc1Ms0CookieProcessing:!0,enableCompoundKey:!0},maxMessageLimit:0},this.privacyGuard=new i.j,this.sharedConfig.extensionConfig||(this.sharedConfig.extensionConfig=[]),this.privacyGuardContext.IgnoredNameParts=l,this.sharedConfig.extensionConfig[this.privacyGuard?.identifier]={context:this.privacyGuardContext,iKey:this.initParams.privacyGuardIngestionToken,useEventFieldPrefix:!0,useAbsoluteFieldName:!0},this.sharedConfig.extensionConfig[this.offlineChannel.identifier]={providers:[3],...o,...this.initParams.applicationInsightsOfflineSettings},this.offlineMinPersistenceLevel=this.initParams.applicationInsightsOfflineSettings?.minPersistenceLevel||this.offlineMinPersistenceLevel,this.oneDsManager.create(this.sharedConfig,[this.privacyGuard]),this.oneDsManager.getPostChannel().core.stopPollingInternalLogs?.(),this.oneDsManager.addSharedPlugin(this.offlineChannel),this.updateSDKWithOfflineTelemetry(!!this.initParams.enableOfflineTelemetry),this.initParams.enablePrivacyGuard&&this._initializePrivacyGuard(),this.contextManager.contextCallbacks["DeviceInfo.OsVersion"]=this.onOsVersion.bind(this)}updateSDKWithPrivacyGuard(e){e?this._initializePrivacyGuard():this._stopPrivacyGuard()}updateSDKWithOfflineTelemetry(e){this.oneDsManager.getPostChannel().core.getPlugin(this.offlineChannel.identifier).setEnabled(e)}setPrivacyGuardSensitiveInformation(e){if(this.privacyGuard){const t=e.userNames,s=e.upns;t&&(this.privacyGuardContext.UserNames=t),s&&(this.privacyGuardContext.UserAliases=[],s.forEach((e=>{const t=e.split("@")[0];t&&this.privacyGuardContext.UserAliases?.push(t)}))),this.privacyGuard.updateCommonContext(this.privacyGuardContext)}}start(){this.resume()}stop(){this.pause()}setOnlineState(e){this.offlineChannel.getOfflineListener().setOnlineState(e?h.ONLINE:h.OFFLINE),this.isOnline=e}pause(){this.oneDsManager.getPostChannel().pause(),this.statusParams.active=!1}resume(){this.oneDsManager.getPostChannel().resume(),this.statusParams.active=!0}setDeviceAuthToken(e){this.initParams?.enableLoggingGlobalDeviceId&&this.oneDsManager.getPostChannel().setMsaAuthTicket(e)}flush(e,t){this.oneDsManager.getPostChannel().flush(!!t,(()=>{e.postMessage("flushed")}))}flushForReinit(e){this.oneDsManager.getPostChannel().flush(!1,(()=>{e.postMessage("flushedForReinit"),this.pause()}))}createNewLogger(e,t){if(e&&(this.statusParams.firstPartyLoggerTokens[e]=""),e&&t&&this.initParams){const s=this.oneDsManager.newInst(t);if(!s)return;s.stopPollingInternalLogs(),this.oneDsLoggers[e]=s,this.statusParams.firstPartyLoggerTokens[e]=t;const r="MSTeamsFix15SecondsProfile";this.oneDsManager.getPostChannel()._loadTransmitProfiles({[r]:[this.initParams.normalPrioritySendTimeInSecs,this.initParams.highPrioritySendTimeInSecs]}),this.oneDsManager.getPostChannel()._setTransmitProfile(r),this._handleSDKContextOverridesAtInit(s)}}logEvent(e,t,s){if(!e||!t)return;const r=this.oneDsLoggers[e];if(!r)return;const i=t.properties,n={logger:{value:e}};for(const e in i)if(Object.prototype.hasOwnProperty.call(i,e)){const t=i[e],s={value:t.value,kind:t.pii};n[e]=s}const a=new Date(t.timestamp).toISOString(),o={name:t.name,baseType:t.eventType,time:a,data:{...n,...this.contextManager.getContext(e,s)}};o.persistence=this.initParams?.eventPersistence?.[t.name]?.[t.eventType]??1,!this.isOnline&&o.data&&o.persistence>=this.offlineMinPersistenceLevel&&(o.data["EventInfo.CapturedOffline"]={value:"true"}),r.track(o)}createNewSecondPartyLogger(e,t,s=!1){const r=this.oneDsManager.newInst(t);r.stopPollingInternalLogs(),this.secondPartyLoggers[e]={logger:r,useTeamsContext:s},this.statusParams.secondPartyLoggerTokens[e]=t}logSecondPartyEvent(e,t){if(!e||!t)return;const s=this.secondPartyLoggers[e];s&&(s.useTeamsContext&&(t.data={...t.data,...this.contextManager.commonSchemaContextMap}),s.logger.track(t))}logSession(e,t){t.sessionId&&this.oneDsManager.getPropertyManager().getPropertiesContext().session.setId(t.sessionId)}gzipPayload(e,t){e.data=(0,a.gzip)(e.data),e.urlString+="&content-encoding=gzip",t(e)}handleSDKContextOverrides(e,t,s){if(!this.initParams?.enableSDKContextOverrides)return;if(!Object.values(g).includes(e))return;const r=s?[s]:Object.values(this.oneDsLoggers),i=t||this.contextManager.getContext(void 0)[e]?.value.toString();if(i)switch(e){case g.browserVer:r.forEach((e=>e.getOverridePropertyManager().getOverrideContext().web.setBrowserVer(i)));break;case g.browserName:r.forEach((e=>e.getOverridePropertyManager().getOverrideContext().web.setBrowser(i)))}}_handleSDKContextOverridesAtInit(e){Object.values(g).forEach((t=>this.handleSDKContextOverrides(t,this.contextManager.getContext(void 0)[t]?.value,e)))}_initializePrivacyGuard(){this.privacyGuard?.setEnabled(!0),this.intervalId||(this.intervalId=setInterval((()=>{this.privacyGuard?.sendSummaryEvent(!0)}),6e5))}_stopPrivacyGuard(){this.intervalId&&clearInterval(this.intervalId),this.privacyGuard?.setEnabled(!1)}onOsVersion(e,t){this.oneDsManager.getPropertyManager().getPropertiesContext().os.ver=t}}var d=s(909957),u=s(705382),p=s(554186);class _{constructor(e){this.router=e,this.isInitialized=!1,this.messageHandlers={},this.router.registerMessageHandler("initCoreSettingsWorker",(e=>{this.port=e.port,this.port.onmessage=this.onMessageHandler.bind(this),this.isInitialized=!0}))}get(e,t){return new Promise(((s,r)=>{this.isInitialized&&this.port||r("CoreSettingsWorkerConsumer is not initialized");const i=`${(0,p.v4)()}-${e}`;this.messageHandlers[i]=e=>{const{values:t}=e;delete this.messageHandlers[i],s(t)},this.port?.postMessage({type:"settingsRequest",payload:{category:e,settings:t,id:i}})}))}subscribe(e,t){if(!this.isInitialized||!this.port)return;const s=s=>{const{values:r}=s;t(r),this.subscriptionCache&&this.subscriptionCache[e]&&(this.subscriptionCache[e].valueCache=r)};return this.subscriptionCache||(this.subscriptionCache={}),this.subscriptionCache[e]?(s({category:e,values:this.subscriptionCache[e].valueCache}),this.subscriptionCache[e].handlers.push(s)):this.subscriptionCache[e]||(this.subscriptionCache[e]={handlers:[],valueCache:{}},this.subscriptionCache[e].handlers.push(s),this.port?.postMessage({type:"subscribeCategory",payload:{category:e}})),()=>{this.subscriptionCache&&this.subscriptionCache[e]&&(this.subscriptionCache[e].handlers=this.subscriptionCache[e].handlers.filter((e=>e!==s)),0===this.subscriptionCache[e].handlers.length&&this.port?.postMessage({type:"unsubscribeCategory",payload:{category:e}}))}}onMessageHandler(e){const{type:t,payload:s}=e.data;if("settingsResponse"===t){const{id:t}=e.data.payload;this.messageHandlers[t](e.data.payload)}"categorySubscriptionResponse"===t&&this.subscriptionCache&&this.subscriptionCache[s.category]&&this.subscriptionCache[s.category].handlers.forEach((e=>{e(s)}))}}const m={"appinfo.id":"ext.app.id","appinfo.env":"ext.app.env","appinfo.version":"ext.app.ver","appinfo.versionnew":"ext.app.ver","appinfo.language":"ext.app.locale","userinfo.language":"ext.user.locale","userinfo.timezone":"ext.location.tz","userinfo.id":"ext.user.id","userinfo.tenantid":"ext.user.tenantid","deviceinfo.id":"ext.device.localid","deviceinfo.make":"ext.device.make","deviceinfo.model":"ext.device.model","deviceinfo.networktype":"ext.net.type","deviceinfo.browsername":"ext.web.browser","deviceinfo.browserversion":"ext.web.browserversion"},f="UserInfo.Id",v="AppInfo.ExpIds";class y{constructor(){this.contextMap={},this.userContextMap={},this.loggerContextMap={},this.enableMTMA=!1,this.enableMergedExpIds=!1,this.contextCallbacks={},this.commonSchemaContextMap={},this.primaryUser=""}setEnableMTMA(e){this.enableMTMA=e}setEnableMergedExpIds(e){this.enableMergedExpIds=e}setUserId(e){const t={value:e,kind:void 0};this.enableMTMA?this.setContext({key:f,value:e,userContextId:e},void 0):(this.contextMap[f]=t,this._setToCommonSchemaPropMap(f,t))}setPrimaryUser(e){this.primaryUser||(this.primaryUser=e,this.userContextMap[e]||(this.userContextMap[e]={}))}logOutUser(e){this.enableMTMA&&(this.userContextMap[e]={})}setContext(e,t){const s={value:e.value};this.enableMTMA?(e.userContextId?(this.userContextMap[e.userContextId]||(this.userContextMap[e.userContextId]={}),this.userContextMap[e.userContextId][e.key]=s):this.contextMap[e.key]=s,this._setToCommonSchemaPropMap(e.key,s)):(this.contextMap[e.key]=s,this._setToCommonSchemaPropMap(e.key,s)),e.key in this.contextCallbacks&&this.contextCallbacks[e.key](e.key,e.value),t?.handleSDKContextOverrides(e.key,e.value)}getContext(e,t){return t=t&&t.length>0?t:this.primaryUser,{...this._getMainContext(t),...this._getLoggerContext(e,t)}}setLoggerContext(e,t){if(e.logger&&(this.loggerContextMap[e.logger]||(this.loggerContextMap[e.logger]={baseMap:{},userMap:{}}),t.has(e.key))){const t={value:e.value};e.key===v&&this.enableMergedExpIds&&(t.value=this._joinExpIds(this.contextMap[v]?.value,e.value)),this.enableMTMA&&e.userContextId?(this.loggerContextMap[e.logger].userMap[e.userContextId]||(this.loggerContextMap[e.logger].userMap[e.userContextId]={}),this.loggerContextMap[e.logger].userMap[e.userContextId][e.key]=t):this.loggerContextMap[e.logger].baseMap[e.key]=t,e.key in this.contextCallbacks&&this.contextCallbacks[e.key](e.key,e.value)}}_getLoggerContext(e,t){return e?(this.loggerContextMap[e]||(this.loggerContextMap[e]={baseMap:{},userMap:{}}),{...this.loggerContextMap[e].baseMap,...t&&t.length&&this.enableMTMA?this.loggerContextMap[e].userMap[t]:{}}):{}}_getMainContext(e){return{...this.contextMap,...e&&e.length&&this.enableMTMA?this.userContextMap[e]:{}}}_joinExpIds(e,t){return e||t?!e&&t?t:e&&!t?e:Array.from(new Set([...e.split(","),...t.split(",")])).join(","):""}_setToCommonSchemaPropMap(e,t){const s=m[e.toLowerCase()];s&&(this.commonSchemaContextMap[s]=t)}}class C{constructor(){this.enableOneDsSdk=!1,this.existingTransports={},this.secondPartyLoggers={},this.firstPartyLoggers={},this.delayedTransportCallbacks=[],this.contextManager=new y,this.liteExperienceChannels={}}initialize(e){if(!e)throw new Error("WebWorkerRouter did not exist.");this.router=e,this._registerMessageHandlers(e),this.workerCoreSettings=new _(e)}setupFirstPartyRouter(e,t){e.registerMessageHandler("initialize",(t=>{this.telemetryTransport?e.postMessage("workerInitialized"):this.delayedTransportCallbacks.push((()=>e.postMessage("workerInitialized")))})),e.registerMessageHandler("newLogger",(e=>{this.telemetryTransport?.createNewLogger(e.key,e.value),this.firstPartyLoggers[e.key]=e.value})),e.registerMessageHandler("logEvent",(e=>{this.telemetryTransport?.logEvent(e.key,e.value,e.userContextId)})),e.registerMessageHandler("setContext",(e=>{const{contextFilter:s}=t;this.contextManager.setLoggerContext(e,s)}))}Verbose(e){this.router&&this.router.postMessage("verbose",e)}Error(e){this.router&&this.router.postMessage("error",e)}Info(e){this.router&&this.router.postMessage("info",e)}channelPortMessageHandlers(e,t,s,r){switch(e){case"initialize":this.telemetryTransport?t.postMessage({name:"workerInitialized",params:void 0}):this.delayedTransportCallbacks.push((()=>t.postMessage({name:"workerInitialized",params:void 0})));break;case"batch":for(const e of r)e&&e.name&&this.channelPortMessageHandlers(e.name,t,s,e?.params);t.postMessage({name:"batchDone",params:void 0});break;case"logEvent":if(r){const e=r;this.telemetryTransport?.logEvent(s??e.key,e.value,e.userContextId)}break;case"setContext":r&&(r.logger=s,this.contextManager.setLoggerContext(r,u.C9));break;case"newLogger":if(r){const e=r;this.telemetryTransport?.createNewLogger(e.key,e.value),this.firstPartyLoggers[e.key]=e.value}}}registerMessageChannelPort(e,t){e.onmessage=(t=>{this.channelPortMessageHandlers(t.data.operation,e,t.data.channel,t.data.params)}).bind(this),this.liteExperienceChannels[t]=e}_registerMessageHandlers(e){e.registerMessageHandler("initialize",(t=>{this.initTelemetryTransport(t),e.postMessage("workerInitialized")})),e.registerMessageHandler("start",(()=>{this.telemetryTransport?.start()})),e.registerMessageHandler("stop",(()=>{this.telemetryTransport?.stop()})),e.registerMessageHandler("flush",(t=>{this.telemetryTransport?.flush(e,t?.isAsync)})),e.registerMessageHandler("flushForReinit",(t=>{this.reinitTelemetryTransport(t,e)})),e.registerMessageHandler("newLogger",(e=>{this.telemetryTransport?.createNewLogger(e.key,e.value),this.firstPartyLoggers[e.key]=e.value})),e.registerMessageHandler("logEvent",(e=>{this.telemetryTransport?.logEvent(e.key,e.value,e.userContextId)})),e.registerMessageHandler("newSecondPartyOneDsLogger",(e=>{this.createSecondPartyLogger(e.key,e.value.ingestionToken,e.value.useTeamsContext)})),e.registerMessageHandler("setupChannelMessengerPort",(e=>{this.registerMessageChannelPort(e.port,e.identifier)})),e.registerMessageHandler("teardownChannelMessengerPort",(e=>{delete this.liteExperienceChannels[e.identifier]})),e.registerMessageHandler("setPrimaryUser",(e=>{this.contextManager.setPrimaryUser(e.userContextId)})),e.registerMessageHandler("logSecondPartyEvent",(e=>{this.telemetryTransport?.logSecondPartyEvent(e.key,e.value)})),e.registerMessageHandler("logSession",(t=>{this.telemetryTransport?.logSession(e,t)})),e.registerMessageHandler("setUserId",(e=>{this.contextManager.setUserId(e)})),e.registerMessageHandler("setDeviceAuthToken",(e=>{this.telemetryTransport?.setDeviceAuthToken(e)})),e.registerMessageHandler("setContext",(e=>{this.contextManager.setContext(e,this.telemetryTransport)})),e.registerMessageHandler("setPrivacyGuardUserInfo",(e=>{this.enableOneDsSdk&&this.telemetryTransport?.setPrivacyGuardSensitiveInformation(e)})),e.registerMessageHandler("updateSDKWithPrivacyGuard",(e=>{this.enableOneDsSdk&&this.telemetryTransport?.updateSDKWithPrivacyGuard(e)})),e.registerMessageHandler("updateSDKWithOfflineTelemetry",(e=>{this.enableOneDsSdk&&this.telemetryTransport?.updateSDKWithOfflineTelemetry(e)})),e.registerMessageHandler("logOutUser",(e=>{this.contextManager?.logOutUser(e)})),e.registerMessageHandler("pulsarSignal",(async e=>{if(!this.pulsarSignalProcessor){const{ProcessorFactory:e}=await s.e(548895).then(s.bind(s,467960));this.pulsarSignalProcessor=e.getInstance().createDefaultProcessor({notify:this.notifyPulsarConsumer.bind(this),workerCoreSettings:this.workerCoreSettings})}if(e.span&&e.type)switch(e.type){case"onStart":this.pulsarSignalProcessor.onStart(e.span.name,e.span);break;case"onEnd":this.pulsarSignalProcessor.onEnd(e.span.name,e.span)}})),e.registerMessageHandler("setOnlineState",(async e=>{this.telemetryTransport?.setOnlineState(e)}))}notifyPulsarConsumer(e){this.router?.postMessage("pulsarSignal",e)}createSecondPartyLogger(e,t,s){this.secondPartyLoggers[e]={token:t,useTeamsContext:s},this.telemetryTransport?.createNewSecondPartyLogger(e,t,s)}reinitTelemetryTransport(e,t){this.telemetryTransport?.flushForReinit(t);const s=e.enableOneDsSdkNs?e.oneDsCollectorUrl||"":e.config.collectorUrl||"",r=this.existingTransports[s];r?r.statusParams.active?this.telemetryTransport=r:(this.telemetryTransport=r,Object.keys(this.firstPartyLoggers).forEach((e=>{this.telemetryTransport?.statusParams.firstPartyLoggerTokens[e]&&this.telemetryTransport?.statusParams.firstPartyLoggerTokens[e]===this.firstPartyLoggers[e]||this.telemetryTransport?.createNewLogger(u.MP[e],this.firstPartyLoggers[e])})),Object.keys(this.secondPartyLoggers).forEach((e=>{this.telemetryTransport?.statusParams.secondPartyLoggerTokens[e]&&this.telemetryTransport?.statusParams.secondPartyLoggerTokens[e]===this.secondPartyLoggers[e].token||this.telemetryTransport?.createNewSecondPartyLogger(e,this.secondPartyLoggers[e].token,this.secondPartyLoggers[e].useTeamsContext)})),this.telemetryTransport.start()):(this.initTelemetryTransport(e),this.telemetryTransport?.createNewLogger(e.defaultLoggerName||u.MP.default,e.appTokens.default),this.telemetryTransport?.logSession(t,{name:e.defaultLoggerName||u.MP.default,state:d.Yj.STARTED,sessionId:e.sessionId,sessionStartTime:e.sessionStartTime}),Object.keys(this.firstPartyLoggers).forEach((e=>{this.telemetryTransport?.createNewLogger(u.MP[e],this.firstPartyLoggers[e])})),Object.keys(this.secondPartyLoggers).forEach((e=>{this.telemetryTransport?.createNewSecondPartyLogger(e,this.secondPartyLoggers[e].token,this.secondPartyLoggers[e].useTeamsContext)})))}initTelemetryTransport(e){this.contextManager.setEnableMTMA(!!e.enableMTMA),this.contextManager.setEnableMergedExpIds(!!e.enableMergedExpIds),e.enableDebugTrace?e.config.log=this:e.config.log=void 0,this.enableOneDsSdk=!0,this.telemetryTransport=new c(this.contextManager),this.existingTransports[e.oneDsCollectorUrl||"defaultOneDsUrl"]=this.telemetryTransport,this.telemetryTransport.initialize(e),this.delayedTransportCallbacks.length>0&&(this.delayedTransportCallbacks.forEach((e=>{e()})),this.delayedTransportCallbacks=[]),Object.keys(this.liteExperienceChannels).forEach((e=>this.liteExperienceChannels[e].postMessage("workerInitialized")))}}},780289:(e,t,s)=>{s.d(t,{k:()=>r});class r{constructor(){this.messageHandlers={},this.registerMessageHandler("batch",(e=>{for(const t of e)if(t&&t.name){const e=this.messageHandlers[t.name];e&&e(t.params)}this.postMessage("batchDone")}))}registerMessageHandler(e,t){this.messageHandlers[e]?console.warn(`message handler already registered for - ${e}`):this.messageHandlers[e]=t}unregisterMessageHandler(e){delete this.messageHandlers[e]}}},902353:(e,t,s)=>{s.d(t,{T:()=>r});class r{constructor(){this._buffer=[]}Add(e,t){-1==this._getIndex(e)&&this._buffer.push({Key:e,Value:t})}AddOrReplace(e,t){var s=this._getIndex(e);s>=0?this._buffer[s]={Key:e,Value:t}:this._buffer.push({Key:e,Value:t})}Remove(e){var t=this._getIndex(e);t>=0&&this._buffer.splice(t,1)}Count(){return this._buffer.length}GetBuffer(){return this._buffer}ContainsKey(e){return this._getIndex(e)>=0}Get(e){var t=this._getIndex(e);return t>=0?this._buffer[t].Value:null}_getIndex(e){for(var t=0,s=-1;t<this._buffer.length;++t)if(this._buffer[t].Key==e){s=t;break}return s}}},378768:(e,t,s)=>{s.d(t,{go:()=>v,zC:()=>y});var r=s(387037);class i{static IsSafariOrFirefox(){return null===i._isSafariOrFirefox&&i._DetectBrowser(),i._isSafariOrFirefox}static ajax(e){var t=i._createConnection();if(e.headers){var s="qsp=true";for(var r in e.headers)s+="&",s+=encodeURIComponent(r),s+="=",s+=encodeURIComponent(e.headers[r]);e.url.indexOf("?")<0?e.url+="?":e.url+="&",e.url+=s}t.open(e.type,e.url),e.complete&&(t.onload=()=>{void 0===t.status&&(t.status=200),e.complete(t)},t.ontimeout=()=>{void 0===t.status&&(t.status=500),e.complete(t)},t.onerror=()=>{e.complete(t)}),t.send(e.data)}static keys(e){if(Object.keys)return Object.keys(e);var t=[];for(var s in e)e.hasOwnProperty(s)&&t.push(s);return t}static IsUsingXDomainRequest(){null==i._usingXDomainRequest&&(void 0===(new XMLHttpRequest).withCredentials&&"undefined"!=typeof XDomainRequest?i._usingXDomainRequest=!0:i._usingXDomainRequest=!1);return i._usingXDomainRequest}static _createConnection(){var e=new XMLHttpRequest;return i.IsUsingXDomainRequest()?new XDomainRequest:e}static _DetectBrowser(){var e=navigator.userAgent.toLowerCase();(e.indexOf("safari")>=0||e.indexOf("firefox")>=0)&&e.indexOf("chrome")<0?i._isSafariOrFirefox=!0:i._isSafariOrFirefox=!1}}i._isSafariOrFirefox=null,i._usingXDomainRequest=null;var n,a,o,h,l,g,c=s(966131),d=s(573886);class u{constructor(){this._buffer=[]}WriteByte(e){this._buffer.push(d.wN.ToByte(e))}Write(e,t,s){for(;s--;)this.WriteByte(e[t++])}GetBuffer(){return this._buffer}}class p{constructor(){this.data=[]}WriteBlob(e){let t={type:"blob",value:e};this.data.push(t)}WriteBool(e){let t={type:"boolean",value:e};this.data.push(t)}WriteContainerBegin(e,t){let s={type:"containerBegin",size:e,elementType:t};this.data.push(s)}WriteMapContainerBegin(e,t,s){let r={type:"mapContainerBegin",size:e,keyType:t,valueType:s};this.data.push(r)}WriteContainerEnd(){this.data.push({type:"containerEnd"})}WriteDouble(e){let t={type:"number",value:e};this.data.push(t)}WriteFloat(e){let t={type:"number",value:e};this.data.push(t)}WriteFieldBegin(e,t,s){let r={type:"fieldBegin",id:t};this.data.push(r)}WriteFieldEnd(){this.data.push({type:"fieldEnd"})}WriteFieldOmitted(e,t,s){let r={type:"fieldOmitted",id:t};this.data.push(r)}WriteInt16(e){let t={type:"number",value:e};this.data.push(t)}WriteInt32(e){let t={type:"number",value:e};this.data.push(t)}WriteInt64(e){let t={type:"number",value:4294967296*e.high+e.low};this.data.push(t)}WriteInt8(e){let t={type:"number",value:e};this.data.push(t)}WriteString(e){let t={type:"string",value:e};this.data.push(t)}WriteStructBegin(e,t){let s={type:"structBegin",isBase:t};this.data.push(s)}WriteStructEnd(e){let t={type:"structEnd",isBase:e};this.data.push(t)}WriteUInt16(e){let t={type:"number",value:e};this.data.push(t)}WriteUInt32(e){let t={type:"number",value:e};this.data.push(t)}WriteUInt64(e){let t={type:"number",value:e};this.data.push(t)}WriteUInt8(e){let t={type:"number",value:e};this.data.push(t)}WriteWString(e){let t={type:"string",value:e};this.data.push(t)}}!function(e){e[e.ECS_ERROR_OK=0]="ECS_ERROR_OK",e[e.ECS_ERROR_INVALID_STATUS=1]="ECS_ERROR_INVALID_STATUS",e[e.ECS_ERROR_INVALID_RESPONSE=6]="ECS_ERROR_INVALID_RESPONSE",e[e.ECS_ERROR_INVALID_CONFIG=8]="ECS_ERROR_INVALID_CONFIG"}(n||(n={}));!function(e){e[e.CONFIG_UPDATED=0]="CONFIG_UPDATED",e[e.TOKEN_IS_INVALID=1]="TOKEN_IS_INVALID"}(a||(a={}));class _{}_.Servers=["https://config.teams.microsoft.com/config/v1/Skype/"],_.RefreshIntervalInMS=36e5,_.FailedRetryFactorInMS=1e4,_.MaxRetryIntervalForFailedInMS=36e5,function(e){e[e.Created=0]="Created",e[e.Initialized=1]="Initialized",e[e.Started=2]="Started",e[e.Loading=3]="Loading"}(o||(o={}));class m{static get version(){return"2.5.0"}}!function(e){e[e.SENT=0]="SENT",e[e.SEND_FAILED=1]="SEND_FAILED"}(h||(h={})),function(e){e[e.DATARV_ERROR_OK=0]="DATARV_ERROR_OK",e[e.DATARV_ERROR_INVALID_EVENT=1]="DATARV_ERROR_INVALID_EVENT",e[e.DATARV_ERROR_INVALID_CONFIG=2]="DATARV_ERROR_INVALID_CONFIG",e[e.DATARV_ERROR_INVALID_DEPENDENCIES=3]="DATARV_ERROR_INVALID_DEPENDENCIES",e[e.DATARV_ERROR_INVALID_STATUS=4]="DATARV_ERROR_INVALID_STATUS",e[e.DATARV_ERROR_INVALID_ARG=5]="DATARV_ERROR_INVALID_ARG"}(l||(l={}));class f{constructor(e){this._errorCode=l.DATARV_ERROR_OK,this._errorCode=e}ErrorCode(){return this._errorCode}toString(){switch(this._errorCode){case l.DATARV_ERROR_OK:return"DATARV_ERROR_OK";case l.DATARV_ERROR_INVALID_EVENT:return"Event is invalid. Either event.Id is empty, or event.Timestamp is empty, or event.EventType is empty.";case l.DATARV_ERROR_INVALID_CONFIG:return"Invalid configuration. CollectorUrl is missing.";case l.DATARV_ERROR_INVALID_DEPENDENCIES:return"DATARV_ERROR_INVALID_DEPENDENCIES";case l.DATARV_ERROR_INVALID_STATUS:return"Telemetry Manager is not initialized.";case l.DATARV_ERROR_INVALID_ARG:return"TenantToken is null or empty, or events is null.";default:return"Unknown error"}}}class v{constructor(){this.eventsLimitInMem=1e4}}class y{static CreateTelemetryManager(){return new T}}class C{}C.MaxPackageSizeInBytes=3e6,C.TimeIntervalForNextSendInMS=15e3,function(e){e[e.Created=0]="Created",e[e.Initialized=1]="Initialized",e[e.Started=2]="Started"}(g||(g={}));class T{constructor(){this._MaxPackageSizeInBytes=C.MaxPackageSizeInBytes,this._listeners=[],this._status=g.Created,this._ecsClient=null,this._etag=null,this._ecsCallback=null,this._testServerResponseHook=null,this._testHookListeners=[]}Initialize(e){if(this._status!=g.Created)throw new f(l.DATARV_ERROR_INVALID_STATUS);if(!e||!e.collectorUrl)throw new f(l.DATARV_ERROR_INVALID_CONFIG);this._config=e,this._Reset(),this._status=g.Initialized,e.ecsClient&&(this._Verbose("ECS object assigned. Do integration"),this._ecsClient=e.ecsClient),e.overwriteSendTimeInterval&&e.overwriteSendTimeInterval>=0&&(C.TimeIntervalForNextSendInMS=e.overwriteSendTimeInterval),this._Verbose("Initialize() done")}setEventsLimitInMem(e){this._eventsCache.setEventsLimitInMem(e)}AddListener(e){if(this._status<g.Initialized)throw new f(l.DATARV_ERROR_INVALID_STATUS);this._Verbose(["AddListener(), status: ",this._status," old length: ",this._listeners.length," func: ",e].join(""));for(var t=0;t<this._listeners.length;++t)if(this._listeners[t]==e)return void this._Verbose("the listener has been added already, index: "+t);this._listeners.push(e),this._Verbose("AddListener() done, the new length: "+this._listeners.length)}RemoveListener(e){if(this._status<g.Initialized)throw new f(l.DATARV_ERROR_INVALID_STATUS);this._Verbose(["RemoveListener(), status: ",this._status," old length: ",this._listeners.length," func: ",e].join(""));for(var t=0;t<this._listeners.length;++t)if(this._listeners[t]==e)return 1==this._listeners.length?this._listeners=[]:t==this._listeners.length-1?this._listeners.pop():this._listeners[t]=this._listeners.pop(),void this._Verbose(["this listener has been found, index: ",t,"new length: ",this._listeners.length].join(""));this._Verbose("listener isn't been found, new length"+this._listeners.length)}Start(){if(this._status<g.Initialized)throw new f(l.DATARV_ERROR_INVALID_STATUS);this._Verbose(["Start(), status:",this._status,"tag:",T._tag].join(" ")),this._status>=g.Started&&this._Verbose("Start() already, ignore"),this._ecsClient&&(this._ecsCallback=this._CreateEcsCallback(),this._ecsClient.AddListener(this._ecsCallback),this._etag=this._ecsClient.GetETag()),++T._tag,this._status=g.Started,this._Verbose(["Start() done, status: ",this._status,"tag: ",T._tag].join(""))}Stop(){if(this._status<g.Initialized)throw new f(l.DATARV_ERROR_INVALID_STATUS);this._Verbose("Stop(), status: "+this._status),this._status!=g.Initialized?(this._Reset(),this._status=g.Initialized,this._Verbose("Stop() done, status: "+this._status)):this._Verbose("Stop() already, ignore")}Flush(e){this._eventsCache.IsEmpty()||this._WorkThread(e)}SendAsync(e,t){if(this._status<g.Initialized)throw new f(l.DATARV_ERROR_INVALID_STATUS);if(this._Verbose(["SendAsync(), status:",this._status,"tenantToken:",e,"count:",t.length].join(" ")),this._status<g.Started)return this._Info("SendAsync(), not started, ignore, return false"),!1;if(!e||!t)throw this._Error("SendAsync(), tenantToken or events is null or empty"),new f(l.DATARV_ERROR_INVALID_ARG);for(var s=0;s<t.length;++s)if(!t[s].Id||!T._eventTypeRegex.test(t[s].EventType)||t[s].Timestamp.Equals("0"))throw this._Error(["eventId:",t[s].Id,"eventType:",t[s].EventType,"timestamp high:",t[s].Timestamp.high,"timestamp low:",t[s].Timestamp.low].join("")),new f(l.DATARV_ERROR_INVALID_EVENT);return this._eventsCache?.AddEvents(e,t),this._Verbose(["SendAsync(), currentTimer: ",this._timer,"eventsCacheIsEmpty",this._eventsCache.IsEmpty()].join(" ")),this._eventsCache.IsEmpty()||this._timer||this._ScheduleTimer(!1),this._Verbose("SendAsync() done"),!0}_WorkThread(e){try{var t=Date.now();if(this._Verbose("_WorkThread, status: "+this._status),this._status<g.Started)return void this._Verbose("_WorkThread, status is not started, return");var s=this._eventsCache.DequeuEvents();if(null==s)return this._Verbose("_WorkThread, No events found, return"),void this._CleanTimer();var r=s.events.length,n=this._PackEvents(s.tenantToken,s.events);this._eventsCache?.AddEvents(s.tenantToken,n.remainedEvents);var a=n.remainedEvents.length;if(null==n.buffer||0==n.buffer.length)return void(this._eventsCache.IsEmpty()?(this._Verbose("eventsCache is empty, stop schedule"),this._CleanTimer()):(this._Verbose("eventsCache is not empty, schedule for next run"),this._ScheduleTimer(!1)));if(this._testHookListeners)for(var o=0;o<this._testHookListeners.length;++o)this._testHookListeners[o](n.sendEvents);if(this._testServerResponseHook){var h=this._testServerResponseHook();return void setTimeout((()=>this._SendCallback(d,s.tenantToken,n.sendEvents,h,null)),100)}var l={type:"POST",url:this._config.collectorUrl,processData:!1,headers:{"content-type":"application/bond-compact-binary","client-id":"NO_AUTH","sdk-version":"ACT-Web-JS-"+m.version},complete:t=>this._SendCallback(d,s.tenantToken,n.sendEvents,t,e)};this._config.useJsonTextStream?(l.data=n.buffer,l.headers["content-type"]="application/json"):i.IsSafariOrFirefox()||"undefined"==typeof Uint8Array?(this._Verbose("Uint8Array is undefined, send with base64 encode."),l.data=c.o4.GetString(n.buffer),l.headers["content-encoding"]="base64"):(this._Verbose("Uint8Array is defined, send with binary format directly."),l.data=new Uint8Array(n.buffer)),s.tenantToken&&(l.headers["x-apikey"]=s.tenantToken);var d=T._tag;this._lastActiveTime=(new Date).getTime(),i.ajax(l),this._Verbose("_Workthread, send via jquery, tag: "+d),this._Info("Processing telemetry events took "+(Date.now()-t)+" ms for "+(r-a)+" events with total size of "+n.buffer.length+" bytes, remaining events - "+a)}catch(e){this._Error("_WorkThread, exception: "+e)}}_PackEvents(e,t){this._Verbose("_PackageEvents, total Count: "+t.length);var s,i=new r.D2,n=new r.LY;n.Source="JS_default_source",n.DataPackageId=r.Wp.GetGuid(),n.Timestamp=r.Wp.GetTimeStamp();var a=t;if(t=[],a.length>200){var o=a.splice(0,200);t.push.apply(t,a),a=o}for(;n.Records=[],n.Records.push.apply(n.Records,a),i.DataPackages=[],i.DataPackages.push(n),s=this._Serialize(i),this._Verbose(["_PackageEvents, sendEvents.length:",a.length," buffer.length:",s.length," MaxPackageSize:",this._MaxPackageSizeInBytes].join("")),!(s.length<this._MaxPackageSizeInBytes);){if(1==a.length){a=[],s=null;break}var h=a.splice(0,Math.floor(a.length/2));this._Verbose("_PackageEvents, too large, package again"),t.push.apply(t,a),a=h}return this._Verbose(["_PakcageEvents done, sendEventsCount:",a.length,"buffer.length:",null==s?0:s.length,"remained events:",t.length].join("")),{buffer:s,sendEvents:a,remainedEvents:t}}_Serialize(e){if(this._config.useJsonTextStream){var t=new p;return e.Write(t),JSON.stringify(t.data)}var s=new u,r=new d.E1(s);return e.Write(r),s.GetBuffer()}_SendCallback(e,t,s,r,i){if(this._Verbose(["_SendCallback","tag:",e,"current tag:",T._tag,"tenantToken:",t,"events count:",s.length,"jqXHR:",r].join("")),null==i){var n=null!=r&&r.status>=200&&r.status<300;if(this._status<g.Started||e<T._tag)this._Verbose("_SendCallback, is not started, or tag is not the same, return");else{if(!(n||r&&400==r.status))return this._Verbose("retry statusCode: "+(r?r.status:0)),this._eventsCache?.AddEvents(t,s),void this._ScheduleTimer(!0);for(var a=0;a<this._listeners.length;++a)this._listeners[a](n?h.SENT:h.SEND_FAILED,r?r.status:0,t,s);this._eventsCache.IsEmpty()?(this._Verbose("eventsCache is empty, stop schedule"),this._CleanTimer()):(this._Verbose("eventsCache is not empty, schedule for next run"),this._ScheduleTimer(!1))}}else i(r?r.status:0,t,s)}_CleanTimer(){this._Verbose("_CleanTimer(), timer: "+this._timer),this._timer&&(clearTimeout(this._timer),this._timer=null)}_ScheduleTimer(e){if(this._Verbose("_ScheduleTimer: isRetry: "+e),this._CleanTimer(),e){this._Verbose("_ScheduleTimer, current factor: "+this._rescheduleFactor);t=Math.floor(5*this._rescheduleFactor*(1+Math.random()));this._timer=setTimeout((()=>this._WorkThread(null)),1e3*t),this._Verbose("_ScheduleTimer, next try (s): "+t),this._rescheduleFactor<<=1,this._rescheduleFactor>64&&(this._rescheduleFactor=1)}else{var t=0,s=(new Date).getTime()-this._lastActiveTime;t=s>C.TimeIntervalForNextSendInMS?0:C.TimeIntervalForNextSendInMS-s,this._timer=setTimeout((()=>this._WorkThread(null)),t),this._Verbose("_ScheduleTimer, next try: "+t),this._rescheduleFactor=1}}_Verbose(e){this._config.log&&this._config.log.Verbose("[TelemetryManagerImpl]: "+e)}_Info(e){this._config.log&&this._config.log.Info("[TelemetryManagerImpl]: "+e)}_Error(e){this._config.log&&this._config.log.Error("[TelemetryManagerImpl]: "+e)}_Reset(){this._Verbose("Reset()"),this._CleanTimer(),this._lastActiveTime=0,this._rescheduleFactor=1,this._sendingEvents=[],this._eventsCache=new I(this._config.log,this._config.eventsLimitInMem),this._ecsClient&&(this._ecsClient.RemoveListener(this._ecsCallback),this._ecsCallback=null)}_CreateEcsCallback(){return e=>{e==a.CONFIG_UPDATED&&(this._etag=this._ecsClient.GetETag())}}__AddTestHookListener(e){if(this._status<g.Initialized)throw new f(l.DATARV_ERROR_INVALID_STATUS);for(var t=0;t<this._testHookListeners.length;++t)if(this._testHookListeners[t]==e)return;this._testHookListeners.push(e)}__ClearTestHookListener(){this._testHookListeners=[]}__GetListenerArray(){return this._listeners}__GetTotalEventsCount(){return this._eventsCache.GetTotalEventsCount()}__IsScheduled(){return null!=this._timer}__ChageMaxPackageSizeInKB(e){this._MaxPackageSizeInBytes=1024*e}__SetTestServerResponseHook(e){this._testServerResponseHook=e}}T._eventTypeRegex=/^[a-zA-Z0-9]([a-zA-Z0-9]|_){2,98}[a-zA-Z0-9]$/,T._tag=0;class I{constructor(e,t){this._logger=e,this._eventsLimitInMem=t,this._events={},this._tokens=[]}AddEvents(e,t){t.length&&(t.length>this._eventsLimitInMem?this._logDroppedEvents(e,t.length):(this._events[e]||(this._events[e]=[],this._tokens.push(e)),this._events[e].push.apply(this._events[e],t)))}IsEmpty(){return 0==this._tokens.length}DequeuEvents(){if(0==this._tokens.length)return null;var e=this._tokens.shift(),t=this._events[e];return delete this._events[e],{tenantToken:e,events:t}}GetTotalEventsCount(){var e=0;for(var t in this._events)e+=this._events[t].length;return e}setEventsLimitInMem(e){this._eventsLimitInMem=e}_logDroppedEvents(e,t){if(!this._logger)return;let s=0;this._events[e]&&(s=this._events[e].length),this._logger.Verbose(`[TelemetryEventCache]: Size of dropped events: ${t},\n      events size currently in queue for tenant ${e}: ${s}`)}}}}]);
//# sourceMappingURL=https://local.teams.office.com/sourcemaps/hashed-assets/875452-744acebffa8fb8c8.js.map